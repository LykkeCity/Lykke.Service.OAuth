@{
    Layout = null;
}
@model WebAuth.Models.LoginViewModel
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Lykke – The Future of Markets</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link rel="apple-touch-icon" sizes="180x180" href="apple-touch-icon.png">
    <link rel="icon" type="image/png" href="favicon-32x32.png" sizes="32x32">
    <link rel="icon" type="image/png" href="favicon-16x16.png" sizes="16x16">
    <link rel="manifest" href="manifest.json">
    <link rel="mask-icon" href="safari-pinned-tab.svg" color="#5bbad5">
    <meta name="theme-color" content="#ffffff">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css">
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>

    @RenderSection("HeadStyles", false)



    <!-- Google Tag Manager -->
    <script>
        (function (w, d, s, l, i) {
            w[l] = w[l] || []; w[l].push({
                'gtm.start':
                    new Date().getTime(), event: 'gtm.js'
            }); var f = d.getElementsByTagName(s)[0],
                j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
                'https://www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
        })(window, document, 'script', 'dataLayer', 'GTM-K5Q43JZ');
    </script>
    <!-- End Google Tag Manager -->

</head>
<body>
    @await Component.InvokeAsync("GaUserId")
    <!-- Google Tag Manager (noscript) -->
    <noscript>
        <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-K5Q43JZ"
                height="0" width="0" style="display:none;visibility:hidden"></iframe>
    </noscript>
    <!-- End Google Tag Manager (noscript) -->
    @RenderBody()
    <environment names="Development">
        <script src="/js/vendor/jquery.min.js"></script>
        <script src="/js/vendor/bootstrap.min.js"></script>
        <script src="/js/vendor/fastclick.min.js"></script>
        <script src="/js/functions.js"></script>
        <script src="/js/vendor/moment.min.js"></script>
        <script src="/js/vendor/notify.min.js"></script>
        <script src="/js/vendor/bootstrap-datetimepicker.min.js"></script>
    </environment>
    <environment names="Staging,Production">
        <script src="https://code.jquery.com/jquery-2.2.4.min.js"
                integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44="
                crossorigin="anonymous"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
    </environment>

    <script>
        function enableSubmit(el, enable) {
            if (enable === true) {
                el.removeAttribute('disabled');
            } else {
                el.setAttribute('disabled', 'disabled');
            }
        }

        function captchaValid(id) {
            validateInput();
        }

        function validateInput() {
            const submit = document.getElementById("submit");
            const email = $("#email").val();
            const password = $("#password").val();
            const filter = /^[-._a-z0-9]+@@(?:[a-z0-9][-a-z0-9]+\.)+[a-z]{2,6}$/;
            const enable = !(email === "" || password === "") && filter.test(email) && grecaptcha.getResponse() !== "";
            enableSubmit(submit, enable);
        }

        (function () {
            const submit = document.getElementById("submit");
            const form = document.querySelector('.auth_group__form');
            var fields = [].slice.call(form.querySelectorAll('.form-group-input'));

            submit.addEventListener('click', function () {


                var formValid = true;

                fields.map(function (el) {
                    formValid = checkValidate(el.children[0]);
                });

                if (formValid) {
                    document.querySelector('.loader').style.display = 'block';
                }

            });

            form.addEventListener('keyup', validateInput);

            function checkValidate(e) {
                const target = e.target || e;
                const val = target.value;
                const type = target.dataset.type;
                var valid = true;

                if (val === '') valid = false;

                if (valid && type === 'mail') {
                    valid = /^[-._a-z0-9]+@@(?:[a-z0-9][-a-z0-9]+\.)+[a-z]{2,6}$/.test(val);
                }

                const parent = target.parentElement;

                if (!valid) {
                    parent.classList.add('invalid');
                    parent.classList.remove('valid');
                } else {
                    parent.classList.remove('invalid');
                    parent.classList.add('valid');
                }

                return valid;
            }
        })();
    </script>
</body>
</html>
